<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>