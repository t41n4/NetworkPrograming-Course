<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>